plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2018.01.22"
}

def TEAM = 6027
def ROBOT_CLASS = "org.usfirst.frc.team6027.robot.Robot"

repositories {
    mavenCentral()
}

// Define my targets (RoboRIO) and artifacts (deployable files)
// This is added by GradleRIO's backing project EmbeddedTools.
deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            team = TEAM
        }
    }
    artifacts {
        artifact('frcJava', jaci.openrio.gradle.frc.FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}

// Defining my dependencies. In this case, WPILib (+ friends), CTRE Phoenix (Talon SRX)
// and NavX.
dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
    compile openrio.powerup.matchData()
    compile 'org.apache.logging.log4j:log4j:2.10.0'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.10.0'
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

/* Doesn't work
task wpilibbackup(type: Copy) {
    //def srcDir = "${System.properties['user.home']}/wpilib/user/java/lib"
    // println "srcDir = $srcDir"
    //doLast {
    //  println "srcDir = $srcDir"
   // }
    from file("${System.properties['user.home']}/wpilib/user/java/lib")
    //include '*'
    into file("${System.properties['user.home']}/wpilib/user/java/lib-backup")
}
*/

/* Deletes the contents of the wpilib/user/java/lib directory so that we can start from a clean slate.
   wpilibcopy should be run after this task.
*/
task wpilibclean(type: Delete) {
    def wpilibdir = "${System.properties['user.home']}/wpilib/user/java/lib" 
    file( wpilibdir ).list().each {
        f -> delete "${wpilibdir}/${f}"
    }
}

/* Copies the dependencies required for deployment as determined by gradle to the wpilib/user/java/lib
   directory.
*/
task wpilibcopy (type: Copy) {
    from configurations.compile
    into "${System.properties['user.home']}/wpilib/user/java/lib"
}

/* Copies our version of the WPI ant build to the user wpilib dir.  This is not needed as long
   as we specify in the build.xml file to use the wpi-build.xml in our project instead of the
   default version found at $user.home/wpilib/java/current/ant 
*/
task wpibuildcopy (type: Copy) {
    from 'wpi-build.xml'
    into "${System.properties['user.home']}/wpilib/java/current/ant"
    rename ('wpi-build.xml', 'build.xml')
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}